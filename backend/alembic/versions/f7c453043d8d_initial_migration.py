"""Initial migration

Revision ID: f7c453043d8d
Revises: 
Create Date: 2025-10-15 21:02:51.435639

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f7c453043d8d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('profile_picture_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('courses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('instructor', sa.String(length=255), nullable=False),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='coursestatus'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_courses_created_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_courses'))
    )
    op.create_index('idx_courses_created_by', 'courses', ['created_by'], unique=False)
    op.create_index(op.f('ix_courses_category'), 'courses', ['category'], unique=False)
    op.create_index(op.f('ix_courses_status'), 'courses', ['status'], unique=False)
    op.create_table('course_contents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.Enum('VIDEO', 'PRESENTATION', name='contenttype'), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_url', sa.String(length=1000), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('content_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_contents_course_id_courses'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_contents'))
    )
    op.create_index('idx_course_contents_course_id', 'course_contents', ['course_id'], unique=False)
    op.create_index('idx_course_contents_order', 'course_contents', ['course_id', 'order_index'], unique=False)
    op.create_table('enrollments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('enrolled_at', sa.DateTime(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_enrollments_course_id_courses'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_enrollments_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_enrollments')),
    sa.UniqueConstraint('user_id', 'course_id', name='unique_user_course')
    )
    op.create_index(op.f('ix_enrollments_course_id'), 'enrollments', ['course_id'], unique=False)
    op.create_index(op.f('ix_enrollments_user_id'), 'enrollments', ['user_id'], unique=False)
    op.create_table('course_progress',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('content_id', sa.UUID(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('last_position', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['course_contents.id'], name=op.f('fk_course_progress_content_id_course_contents'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_progress_course_id_courses'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_course_progress_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_progress')),
    sa.UniqueConstraint('user_id', 'content_id', name='unique_user_content_progress')
    )
    op.create_index('idx_course_progress_completed', 'course_progress', ['completed'], unique=False)
    op.create_index('idx_course_progress_content_id', 'course_progress', ['content_id'], unique=False)
    op.create_index('idx_course_progress_user_completed', 'course_progress', ['user_id', 'completed'], unique=False)
    op.create_index('idx_user_course_progress', 'course_progress', ['user_id', 'course_id'], unique=False)
    op.create_table('notes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('content_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['course_contents.id'], name=op.f('fk_notes_content_id_course_contents'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_notes_course_id_courses'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notes_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notes'))
    )
    op.create_index('idx_notes_content_id', 'notes', ['content_id'], unique=False)
    op.create_index(op.f('ix_notes_course_id'), 'notes', ['course_id'], unique=False)
    op.create_index(op.f('ix_notes_user_id'), 'notes', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notes_user_id'), table_name='notes')
    op.drop_index(op.f('ix_notes_course_id'), table_name='notes')
    op.drop_index('idx_notes_content_id', table_name='notes')
    op.drop_table('notes')
    op.drop_index('idx_user_course_progress', table_name='course_progress')
    op.drop_index('idx_course_progress_user_completed', table_name='course_progress')
    op.drop_index('idx_course_progress_content_id', table_name='course_progress')
    op.drop_index('idx_course_progress_completed', table_name='course_progress')
    op.drop_table('course_progress')
    op.drop_index(op.f('ix_enrollments_user_id'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_course_id'), table_name='enrollments')
    op.drop_table('enrollments')
    op.drop_index('idx_course_contents_order', table_name='course_contents')
    op.drop_index('idx_course_contents_course_id', table_name='course_contents')
    op.drop_table('course_contents')
    op.drop_index(op.f('ix_courses_status'), table_name='courses')
    op.drop_index(op.f('ix_courses_category'), table_name='courses')
    op.drop_index('idx_courses_created_by', table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
